{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { Picker } from \"@react-native-picker/picker\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Informations = function Informations(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"42Cursus\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedValue = _React$useState2[0],\n      setSelectedValue = _React$useState2[1];\n\n  var userData = route.params.data;\n  var coalitionsData = route.params.coalition;\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checked = _React$useState4[0],\n      setChecked = _React$useState4[1];\n\n  var imageCover = coalitionsData[0].image_url;\n  var colName = coalitionsData[0].name;\n  var lenghtC = userData == null ? void 0 : userData.cursus_users.length;\n  var radio_props = [{\n    label: ' Projects  ',\n    value: 0\n  }, {\n    label: ' Achievements',\n    value: 1\n  }];\n\n  var achievements = function achievements() {\n    return _jsx(SafeAreaView, {\n      children: _jsx(ScrollView, {\n        children: _jsx(View, {\n          style: styles.cardS,\n          children: userData == null ? void 0 : userData.achievements.map(function (item, i) {\n            return _jsx(Card, {\n              style: styles.cardc,\n              children: _jsxs(Card.Content, {\n                children: [_jsx(Title, {\n                  children: item.name\n                }), _jsx(Paragraph, {\n                  style: styles.textI,\n                  children: item.description\n                })]\n              })\n            }, i);\n          })\n        })\n      })\n    });\n  };\n\n  var projects = function projects() {\n    return _jsx(SafeAreaView, {\n      children: _jsx(View, {\n        style: styles.cardS,\n        children: userData == null ? void 0 : userData.projects_users.map(function (item, i) {\n          return _jsx(Card, {\n            style: styles.cardc,\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Title, {\n                children: item.project.name\n              }), _jsx(Paragraph, {\n                style: styles.textI,\n                children: \"\" + item.status + \" \" + (\"\" + (item.final_mark ? item.final_mark : \"\"))\n              })]\n            })\n          }, i);\n        })\n      })\n    });\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#011F26\"\n    },\n    input: {\n      height: 40,\n      width: \"80%\",\n      margin: 12,\n      borderWidth: 1,\n      padding: 10\n    },\n    button1: {\n      backgroundColor: \"#7CE019\",\n      width: '80%',\n      padding: 15,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5\n    },\n    container1: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginBottom: 20,\n      backgroundColor: \"#5C7373\",\n      margin: 5,\n      borderRadius: 10\n    },\n    cardS: {\n      margin: 10\n    },\n    cardc: {\n      margin: 5,\n      borderRadius: 10,\n      backgroundColor: \"#5C7373\"\n    },\n    scroll: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    textI: {\n      color: \"#f1f2f3\",\n      marginBottom: 2\n    },\n    radios: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    imageB: {\n      flex: 1,\n      width: 100,\n      height: 100\n    }\n  });\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.container1,\n          children: [_jsx(Image, {\n            style: {\n              borderRadius: \"100%\",\n              width: 70,\n              height: 70,\n              overflow: 'hidden',\n              resizeMode: 'v',\n              position: 'absolute',\n              left: 0,\n              top: 2\n            },\n            source: {\n              uri: imageCover\n            }\n          }), _jsx(Text, {\n            style: {\n              position: 'absolute',\n              left: 60,\n              top: 15\n            },\n            children: colName\n          }), _jsx(Image, {\n            style: {\n              borderRadius: 50,\n              width: 90,\n              height: 90,\n              overflow: 'hidden',\n              resizeMode: 'contain'\n            },\n            source: {\n              uri: userData == null ? void 0 : userData.image_url\n            }\n          }), _jsxs(Text, {\n            style: styles.textI,\n            children: [\"Full Name : \", userData == null ? void 0 : userData.displayname]\n          }), _jsxs(Text, {\n            style: styles.textI,\n            children: [\"Login : \", userData == null ? void 0 : userData.login]\n          }), _jsxs(Text, {\n            style: styles.textI,\n            children: [\"Email : \", userData == null ? void 0 : userData.email]\n          }), _jsxs(Text, {\n            style: styles.textI,\n            children: [\"Correction Points : \", userData == null ? void 0 : userData.correction_point]\n          }), _jsxs(Text, {\n            style: styles.textI,\n            children: [\"level : \", userData == null ? void 0 : userData.cursus_users[lenghtC - 1].level]\n          })]\n        }), _jsx(View, {\n          style: styles.radios,\n          children: _jsx(RadioForm, {\n            radio_props: radio_props,\n            initial: 0,\n            onPress: function onPress(checked) {\n              setChecked(function () {\n                return !checked;\n              });\n            },\n            formHorizontal: true,\n            labelColor: \"white\",\n            selectedLabelColor: \"whitesmoke\",\n            buttonColor: \"#5C7373\",\n            selectedButtonColor: \"#027368\",\n            buttonWrapStyle: {\n              marginLeft: 5\n            }\n          })\n        }), _jsxs(View, {\n          children: [console.log(\"checkeddddd\", checked), checked != 0 ? projects() : achievements()]\n        })]\n      })\n    })\n  });\n};\n\nexport default Informations;","map":{"version":3,"sources":["/Users/smoudene/Desktop/swiftyC/Views/Informations/index.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","Picker","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","Informations","route","navigation","useState","selectedValue","setSelectedValue","userData","params","data","coalitionsData","coalition","checked","setChecked","imageCover","image_url","colName","name","lenghtC","cursus_users","length","radio_props","label","value","achievements","styles","cardS","map","item","i","cardc","textI","description","projects","projects_users","project","status","final_mark","StyleSheet","create","container","flex","backgroundColor","input","height","width","margin","borderWidth","padding","button1","alignItems","justifyContent","borderRadius","container1","marginBottom","scroll","color","radios","flexDirection","imageB","overflow","resizeMode","position","left","top","uri","displayname","login","email","correction_point","level","marginLeft","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Image, ImageBackground , SafeAreaView, Text, TextInput, useWindowDimensions, View,StyleSheet,Pressable, ScrollView} from \"react-native\";\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { Picker } from \"@react-native-picker/picker\";\nimport RadioForm, {RadioButton, RadioButtonInput, RadioButtonLabel} from 'react-native-simple-radio-button';\n\n\nconst Informations = ({route, navigation}) => {\n  const [selectedValue, setSelectedValue] = React.useState(\"42Cursus\");\n  const userData  = route.params.data\n  const coalitionsData = route.params.coalition\n  const [checked, setChecked] = React.useState(true);\n  const imageCover = coalitionsData[0].image_url\n  const colName = coalitionsData[0].name\n  const lenghtC = userData?.cursus_users.length\n\n  var radio_props = [\n    {label: ' Projects  ', value: 0 },\n    {label: ' Achievements', value: 1}\n  ];\n  const achievements = () => (\n    <SafeAreaView>\n      <ScrollView>\n        <View style={styles.cardS}>\n          {\n            userData?.achievements.map((item, i) => {\n              return (\n                <Card style={styles.cardc} key={i}>\n                  <Card.Content>\n                    <Title>{item.name}</Title>\n                    <Paragraph style={styles.textI}>{item.description}</Paragraph>\n                  </Card.Content>\n                </Card>\n              )\n          })\n          }\n        </View>\n        </ScrollView> \n      </SafeAreaView>\n  );\n  \n  const projects = () => (\n    <SafeAreaView>\n          <View style={styles.cardS}>\n            {\n              userData?.projects_users.map((item, i) => {\n                return (\n                  <Card style={styles.cardc} key={i}>\n                    <Card.Content>\n                      <Title>{item.project.name}</Title>\n                      <Paragraph style={styles.textI}>{ `${item.status}` + \" \" + `${item.final_mark ? item.final_mark : \"\" }`}</Paragraph>\n                    </Card.Content>\n                  </Card>\n                )\n            })\n            }\n          </View>\n      </SafeAreaView>\n  )\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor : \"#011F26\"\n    },\n    input: {\n      height: 40,\n      width: \"80%\",\n      margin: 12,\n      borderWidth: 1,\n      padding: 10,\n    },\n    button1: {\n      backgroundColor: \"#7CE019\",\n      width: '80%',\n      padding: 15,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5,\n  },\n  container1:{\n    flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginBottom: 20,\n      backgroundColor : \"#5C7373\",\n      margin : 5,\n      borderRadius : 10,\n      \n\n  },\n  cardS:{\n    margin: 10\n  },\n  cardc:{\n    margin: 5,\n    borderRadius:10,\n    backgroundColor : \"#5C7373\"\n  },\n  scroll: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  textI : {\n    color : \"#f1f2f3\",\n    marginBottom : 2\n  },\n  radios : {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  imageB: {\n    flex: 1,\n    width : 100,\n    height : 100\n  },\n  });\n\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n              <View>\n                  {/* <Pressable\n                  style={styles.button1}\n                  onPress={()=> console.log(\"data\", userData, \"coalitions\", coalitionsData,\"lenghtttt===\",lenghtC)}\n                  >\n                  </Pressable> */}\n                  <View style={styles.container1}>\n                   {/* <ImageBackground source={imageCover} resizeMode=\"cover\" style={styles.imageB} /> */}\n                    <Image\n                    style={{\n                      borderRadius: \"100%\",\n                      width: 70,\n                      height: 70,\n                      overflow: 'hidden',\n                      resizeMode: 'v',\n                      position : 'absolute',\n                      left : 0,\n                      top : 2,\n                    }}\n                    // source={ userData?.image_url }\n                    source={{uri : imageCover}}\n                    /> \n                    <Text\n                      style={{\n                        position : 'absolute',\n                        left : 60,\n                        top :  15\n                      }}>{colName}</Text>\n                    {/* <Text></Text> */}\n                  <Image\n                    style={{\n                      borderRadius: 50,\n                      width: 90,\n                      height: 90,\n                      overflow: 'hidden',\n                      resizeMode: 'contain',\n                    }}\n                    // source={ userData?.image_url }\n                    source={{ uri: userData?.image_url }}\n                    />\n                    <Text style={styles.textI}>Full Name : {userData?.displayname}</Text>\n                    <Text style={styles.textI}>Login : {userData?.login}</Text>\n                    <Text style={styles.textI}>Email : {userData?.email}</Text>\n                    <Text style={styles.textI}>Correction Points : {userData?.correction_point}</Text>\n                    <Text style={styles.textI}>level : {userData?.cursus_users[lenghtC - 1].level}</Text>\n                    {/* <Progress.Bar progress={userData.cursus_users[0].level} width={200} /> */}\n                    {/* </ImageBackground> */}\n                  </View>\n                  <View style={styles.radios}>\n                    \n                      <RadioForm  \n                      radio_props={radio_props}\n                      initial={0}\n                      onPress={(checked) => { setChecked(() => !checked)       \n                        }}\n                        formHorizontal={true}\n                        labelColor=\"white\"\n                        selectedLabelColor=\"whitesmoke\"\n                        buttonColor=\"#5C7373\"\n                        selectedButtonColor=\"#027368\"\n                        buttonWrapStyle = {{\n                          marginLeft : 5\n                        }}\n                      />\n                  </View>\n                  <View>\n                 { console.log(\"checkeddddd\",checked)}\n                    {\n                      checked != 0 ? \n                          projects()  \n                       : \n                        achievements()   \n                  }\n                  </View>\n                \n              </View>\n          </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nexport default Informations"]},"metadata":{},"sourceType":"module"}