{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { _id, _secret } from \"../../helpers/data.json\";\nimport axios from 'axios';\nimport Informations from \"../Informations\";\nimport { useAuthRequest } from \"expo-auth-session\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"#011F26\"\n    },\n    input: {\n      height: 40,\n      width: 200,\n      marginBottom: 12,\n      borderWidth: 1,\n      padding: 10,\n      borderRadius: 5,\n      backgroundColor: \"#FFF\"\n    },\n    button: {\n      backgroundColor: \"#5C7373\",\n      width: 160,\n      padding: 15,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5,\n      alignSelf: 'center'\n    }\n  });\n  var config = {\n    authorizationEndpoint: 'https://api.intra.42.fr/oauth/authorize',\n    tokenEndpoint: 'https://api.intra.42.fr/oauth/token'\n  };\n\n  var _useAuthRequest = useAuthRequest({\n    clientId: _id,\n    scopes: [\"public\"],\n    redirectUri: \"exp://skmdn\",\n    responseType: \"code\"\n  }, config),\n      _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      console.log(\"responseeeeee: \", response.type);\n      navigation.navigate(\"Home\");\n    } else if ((response == null ? void 0 : response.type) === \"error\") {\n      console.log(\"response1: \", response == null ? void 0 : response.type);\n      alert(\"login failed\");\n    }\n  }, [response]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.viewContainer,\n      children: _jsx(Pressable, {\n        style: styles.button,\n        onPress: function onPress() {\n          return promptAsync();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Login zit\"\n        })\n      })\n    })\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/smoudene/Desktop/swiftyC/Views/Login/index.js"],"names":["React","AsyncStorage","_id","_secret","axios","Informations","useAuthRequest","Login","navigation","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","input","height","width","marginBottom","borderWidth","padding","borderRadius","button","alignSelf","config","authorizationEndpoint","tokenEndpoint","clientId","scopes","redirectUri","responseType","request","response","promptAsync","useEffect","type","console","log","navigate","alert","viewContainer","text"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;;;;;;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,GAAR,EAAaC,OAAb;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAE9B,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAC;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,cAAc,EAAE,QAFR;AAGRC,MAAAA,UAAU,EAAE,QAHJ;AAIRC,MAAAA,eAAe,EAAG;AAJV,KADqB;AAO/BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,GAFF;AAGLC,MAAAA,YAAY,EAAE,EAHT;AAILC,MAAAA,WAAW,EAAE,CAJR;AAKLC,MAAAA,OAAO,EAAE,EALJ;AAMLC,MAAAA,YAAY,EAAG,CANV;AAOLP,MAAAA,eAAe,EAAG;AAPb,KAPwB;AAgB/BQ,IAAAA,MAAM,EAAE;AACNR,MAAAA,eAAe,EAAE,SADX;AAENG,MAAAA,KAAK,EAAE,GAFD;AAGNG,MAAAA,OAAO,EAAE,EAHH;AAINP,MAAAA,UAAU,EAAE,QAJN;AAKND,MAAAA,cAAc,EAAE,QALV;AAMNS,MAAAA,YAAY,EAAE,CANR;AAONE,MAAAA,SAAS,EAAG;AAPN;AAhBuB,GAAlB,CAAf;AA2BF,MAAMC,MAAM,GAAG;AACXC,IAAAA,qBAAqB,EAAE,yCADZ;AAEXC,IAAAA,aAAa,EAAE;AAFJ,GAAf;;AAKA,wBAAyCtB,cAAc,CACnD;AACEuB,IAAAA,QAAQ,EAAE3B,GADZ;AAEE4B,IAAAA,MAAM,EAAE,CAAC,QAAD,CAFV;AAGEC,IAAAA,WAAW,EAAE,aAHf;AAIEC,IAAAA,YAAY,EAAE;AAJhB,GADmD,EAOnDN,MAPmD,CAAvD;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,QAAhB;AAAA,MAA0BC,WAA1B;;AASAnC,EAAAA,KAAK,CAACoC,SAAN,CAAgB,YAAM;AAClB,QACE,CAAAF,QAAQ,QAAR,YAAAA,QAAQ,CAAEG,IAAV,MAAmB,SADrB,EAEE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BL,QAAQ,CAACG,IAAvC;AACA7B,MAAAA,UAAU,CAACgC,QAAX,CAAoB,MAApB;AACD,KALD,MAKM,IAAI,CAAAN,QAAQ,QAAR,YAAAA,QAAQ,CAAEG,IAAV,MAAmB,OAAvB,EAAgC;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,QAA1B,oBAA0BA,QAAQ,CAAEG,IAApC;AACAI,MAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AAEF,GAXH,EAWK,CAACP,QAAD,CAXL;AAaE,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACG,SAApB;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACiC,aAApB;AAAA,gBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEjC,MAAM,CAACe,MADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMW,WAAW,EAAjB;AAAA,SAFb;AAAA,kBAII,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE1B,MAAM,CAACkC,IAApB;AAAA;AAAA;AAJJ;AADJ;AADJ,IADF;AAYD,CApED;;AAsEA,eAAepC,KAAf","sourcesContent":["import React  from 'react'\nimport {Image, ImageBackground, SafeAreaView, Text, TextInput, TouchableWithoutFeedback,ActivityIndicator , View,StyleSheet,Pressable} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {_id, _secret} from \"../../helpers/data.json\"\nimport axios from 'axios';\nimport Informations from '../Informations';\nimport { useAuthRequest } from \"expo-auth-session\";\n\nconst Login = ({navigation}) => {\n\n  const styles = StyleSheet.create({\n    container:{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor : \"#011F26\"\n    },\n    input: {\n      height: 40,\n      width: 200,\n      marginBottom: 12,\n      borderWidth: 1,\n      padding: 10,\n      borderRadius : 5,\n      backgroundColor : \"#FFF\"\n    },\n    button: {\n      backgroundColor: \"#5C7373\",\n      width: 160,\n      padding: 15,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 5,\n      alignSelf : 'center'\n  },\n  });\n\nconst config = {\n    authorizationEndpoint: 'https://api.intra.42.fr/oauth/authorize',\n    tokenEndpoint: 'https://api.intra.42.fr/oauth/token',\n  };\n\nconst [request, response, promptAsync] = useAuthRequest(\n    {\n      clientId: _id,\n      scopes: [\"public\"],\n      redirectUri: \"exp://skmdn\",\n      responseType: \"code\",\n    },\n    config\n  );\nReact.useEffect(() => {\n    if (\n      response?.type === \"success\"\n    ) {\n      console.log(\"responseeeeee: \",response.type)\n      navigation.navigate(\"Home\")\n    }else if (response?.type === \"error\") {\n        console.log(\"response1: \",response?.type)\n        alert(\"login failed\")\n    }\n    \n  }, [response]);\n  \n  return (\n    <View style={styles.container} >\n        <View style={styles.viewContainer}>\n            <Pressable\n                style={styles.button}\n                onPress={() => promptAsync()}\n            >\n                <Text style={styles.text}>Login zit</Text>\n            </Pressable>\n        </View>\n    </View>\n  )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}